<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace用于接口绑定-->
<mapper namespace="com.chikage.framework.quartzframework.repository.QuartzJobDetailsMapper">

    <resultMap id="BaseResultMap" type="com.chikage.framework.quartzframework.model.QuartzJobDetails">
        <id column="SCHED_NAME" property="schedName" jdbcType="VARCHAR" />
        <id column="JOB_NAME" property="jobName" jdbcType="VARCHAR" />
        <id column="JOB_GROUP" property="jobGroup" jdbcType="VARCHAR" />
        <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
        <result column="JOB_CLASS_NAME" property="jobClassName" jdbcType="VARCHAR" />
        <result column="IS_DURABLE" property="isDurable" jdbcType="VARCHAR" />
        <result column="IS_NONCONCURRENT" property="isNonconcurrent" jdbcType="VARCHAR" />
        <result column="IS_UPDATE_DATA" property="isUpdateData" jdbcType="VARCHAR" />
        <result column="REQUESTS_RECOVERY" property="requestsRecovery" jdbcType="VARCHAR" />
        <result column="JOB_DATA" property="jobData" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="DataResultMap" type="java.util.Map">
        <id column="SCHED_NAME" property="schedName" jdbcType="VARCHAR" />
        <id column="JOB_NAME" property="jobName" jdbcType="VARCHAR" />
        <id column="JOB_GROUP" property="jobGroup" jdbcType="VARCHAR" />
        <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
        <result column="JOB_CLASS_NAME" property="jobClassName" jdbcType="VARCHAR" />
        <result column="IS_DURABLE" property="isDurable" jdbcType="VARCHAR" />
        <result column="IS_NONCONCURRENT" property="isNonconcurrent" jdbcType="VARCHAR" />
        <result column="IS_UPDATE_DATA" property="isUpdateData" jdbcType="VARCHAR" />
        <result column="REQUESTS_RECOVERY" property="requestsRecovery" jdbcType="VARCHAR" />
        <result column="JOB_DATA" property="jobData" jdbcType="VARCHAR" />
        <result column="TRIGGER_NAME" property="triggerName" jdbcType="VARCHAR" />
        <result column="TRIGGER_GROUP" property="triggerGroup" jdbcType="VARCHAR" />
        <result column="CRON_EXPRESSION" property="cronExpression" jdbcType="VARCHAR" />
        <result column="TIME_ZONE_ID" property="timeZoneId" jdbcType="VARCHAR" />
        <result column="TRIGGER_STATE" property="triggerState" jdbcType="VARCHAR" />

    </resultMap>

    <sql id="Base_Column_List" >
		t.SCHED_NAME ,
		t.JOB_NAME ,
		t.JOB_GROUP ,
		t.DESCRIPTION ,
		t.JOB_CLASS_NAME ,
		t.IS_DURABLE ,
		t.IS_NONCONCURRENT ,
		t.IS_UPDATE_DATA ,
		t.REQUESTS_RECOVERY ,
		t.JOB_DATA
  	</sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from qrtz_job_details t
        where t.SCHED_NAME = #{schedName}
    </select>


    <insert id="insert" parameterType="com.chikage.framework.quartzframework.model.QuartzJobDetails" >
	    insert into qrtz_job_details (
			SCHED_NAME,
			JOB_NAME,
			JOB_GROUP,
			DESCRIPTION,
			JOB_CLASS_NAME,
			IS_DURABLE,
			IS_NONCONCURRENT,
			IS_UPDATE_DATA,
			REQUESTS_RECOVERY,
			JOB_DATA
	    )values (
	      	#{vo.schedName,jdbcType=VARCHAR},
	      	#{vo.jobName,jdbcType=VARCHAR},
	      	#{vo.jobGroup,jdbcType=VARCHAR},
	      	#{vo.description,jdbcType=VARCHAR},
	      	#{vo.jobClassName,jdbcType=VARCHAR},
	      	#{vo.isDurable,jdbcType=VARCHAR},
	      	#{vo.isNonconcurrent,jdbcType=VARCHAR},
	      	#{vo.isUpdateData,jdbcType=VARCHAR},
	      	#{vo.requestsRecovery,jdbcType=VARCHAR},
	      	#{vo.jobData,jdbcType=VARCHAR}
	    )
  	</insert>


    <insert id="insertSelective" parameterType="com.chikage.framework.quartzframework.model.QuartzJobDetails" >
        insert into qrtz_job_details
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="schedName != null">
                SCHED_NAME,
            </if>
            <if test="jobName != null">
                JOB_NAME,
            </if>
            <if test="jobGroup != null">
                JOB_GROUP,
            </if>
            <if test="description != null">
                DESCRIPTION,
            </if>
            <if test="jobClassName != null">
                JOB_CLASS_NAME,
            </if>
            <if test="isDurable != null">
                IS_DURABLE,
            </if>
            <if test="isNonconcurrent != null">
                IS_NONCONCURRENT,
            </if>
            <if test="isUpdateData != null">
                IS_UPDATE_DATA,
            </if>
            <if test="requestsRecovery != null">
                REQUESTS_RECOVERY,
            </if>
            <if test="jobData != null">
                JOB_DATA,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="schedName != null">
                #{schedName,jdbcType=VARCHAR},
            </if>
            <if test="jobName != null">
                #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="jobGroup != null">
                #{jobGroup,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="jobClassName != null">
                #{jobClassName,jdbcType=VARCHAR},
            </if>
            <if test="isDurable != null">
                #{isDurable,jdbcType=VARCHAR},
            </if>
            <if test="isNonconcurrent != null">
                #{isNonconcurrent,jdbcType=VARCHAR},
            </if>
            <if test="isUpdateData != null">
                #{isUpdateData,jdbcType=VARCHAR},
            </if>
            <if test="requestsRecovery != null">
                #{requestsRecovery,jdbcType=VARCHAR},
            </if>
            <if test="jobData != null">
                #{jobData,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <delete id="deleteByPrimaryKey">
	    delete from qrtz_job_details where SCHED_NAME= #{schedName}
	    delete from qrtz_job_details where JOB_NAME= #{jobName}
	    delete from qrtz_job_details where JOB_GROUP= #{jobGroup}
	</delete>

</mapper>